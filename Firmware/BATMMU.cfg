#####################################################################
# To-Do
#####################################################################
# 1. Makro for selecting modes
# 2. Programm a Y-Splitter runout Makro that uses 1. to perform an action
# 3. Clean up Makro logic and remove double checks as well as unneeded variable savings 
# 4. Find a solution that the pause really pauses the printer
# 5. Add a custom unload and load temps per filament, best case with cusom gcode in slicer


#####################################################################
# How-To Setup
#####################################################################
# I recommend to use Orcaslicer for now because it's very easy to setup a MMU setup (simply click on the plus sign on the filament section, that's it) and it doesnt add any gcode for ramming, extruding etc. with the purge tower.

### Orca Slicer ###
# Nothing has to be done in the slicer, it will call the correct macros automatically

### SuSi ###
# Set '_SET_TOOL[next_extruder]' for the 'Tool change G-code' in the 'Printer Settings -> Custom G-code'
# Also you have to set the 'Extruder' number to 2 and check 'Single Extruder Multi Material' in 'Printer Settings -> General -> Capabilities'

# Note that any purge sequence in your start macro isn't needed for dual color printing since we have the purge tower.
# For single color: If you pass the variable of the initial tool with your start gcode you could load the filament before you do the purge line, would look like that:

# Slicer: 'START_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer] FILAMENT=[initial_tool]'

# Start Gcode:
#[gcode_macro START_PRINT]
#gcode:
    # Add the following two lines to the very top of your start gcode, like here (without the '#' at the beginning).
    # {% set initialfilament = params.initialfilament|default(0)|int %}
    # SAVE_VARIABLE VARIABLE=initialfilament VALUE={initialfilament}
    # ...
    # ... Bed and Nozzle heating, bedmesh etc.
    # ...
    # Add the macro '_INITIATE_MMU' just before you do your purging and it will load the filament it will use first / for the print. 
    # _INITIATE_MMU
    # M117 Purge line
	# PURGE_LINE
    # ...
    # Whatever you do after the purge line
    # ...

#####################################################################
# Include
#####################################################################
[include Macros/common_movements.cfg]
[include Macros/Filament_A.cfg]
[include Macros/Filament_B.cfg]
[include Macros/Pause_Resume.cfg]
[include Macros/Sensor_checks.cfg]
[include Macros/Slicer_macros.cfg]
[include Macros/Tip_forming.cfg]
[include Macros/Tip_forming_Annex.cfg]
[include Macros/Tip_forming_Jon.cfg]
[include Macros/Variable_settings.cfg]

### Optional
[include Macros/extras.cfg]
#####################################################################
# Hardware Section
#####################################################################
[duplicate_pin_override]
pins: EBBCan:PB6, PC6, PB15, PC7, PC10
#   A comma separated list of pins that may be used multiple times in
#   a config file without normal error checks. This parameter must be
#   provided.

#[mcu bat]
#serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AH06PIM1-if00-port0

[servo BATMMU_servo]
pin: PA1 # Servo Port on SKR Mini E3 DIP
maximum_servo_angle: 180
minimum_pulse_width: 0.00025
maximum_pulse_width: 0.0024

# BAT-MMU Feeder
[manual_stepper BATMMU_stepper]
step_pin: PC6
dir_pin: PB15
enable_pin: !PC7
microsteps: 8
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 32.77872
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
velocity: 200
accel: 1000
endstop_pin: EBBCan:PB6

[tmc2209 manual_stepper BATMMU_stepper]
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt those values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
uart_pin: PC10
interpolate: True
run_current: 0.40
#hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 0 

[extruder_stepper BATMMU_extruder_stepper]
extruder:
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: PC6
dir_pin: PB15
enable_pin: !PC7
microsteps: 8
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 32.77872
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree


[filament_switch_sensor load_check_sensor]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode: 
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 0.1
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^EBBCan:PB6
#   The pin on which the switch is connected. This parameter must be
#   provided.

[filament_switch_sensor toolhead_sensor]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode: 
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode: _DEACTIVATE_BATMMU_EXTRUDER_STEPPER
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 0.1
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^EBBCan:PB3
#   The pin on which the switch is connected. This parameter must be
#   provided.


#####################################################################
# Setup -- Variables
#####################################################################
[gcode_macro _BATMMU_VAR]
description: Empty macro to store the variables
### Servo ###
variable_servo_filament_a_angle: 120
variable_servo_neurtal_angle: 110
variable_servo_filament_b_angle: 180

### Bowden-Lengths I ###
variable_bowdenlength_a_mmu_to_y: 370      #Roughly measure the length of your bowden tube between MMU and Y-Splitter
variable_bowdenlength_b_mmu_to_y: 370      #Roughly measure the length of your bowden tube between MMU and Y-Splitter
variable_bowdenlength_y_to_extruder: 185   #Roughly measure the length of your bowden tube between Y-Splitter and Extruder

### Final Checks ###
variable_x_park: 215                       #Position of the parked toolhead during the filament swaps. I recommend to have x at the oposite side of the mmu to get a possible straight input path.
variable_y_park: 10                        #Position of the parked toolhead during the filament swaps.
variable_min_hotend_temp: 250              #Minimum temperature the hotend needs to load filament. This only applies to macros that involves the hotend
variable_unloading_temp: 220               #Minimum temperature the hotend needs to unload filament. This only applies to macros that involves the hotend ToDo: 
variable_bowden_to_extruder: 15            #Since the bowden doesn't sit on the extruder gears we have to account for that distance.
variable_extruder_to_toolheadsensor: 25    #Distance between the start of Extruder Gears and the toolheadsensor.
variable_toolhead_sensor_to_nozzle: 48     #Distance from the toolheadsensor to the tip of the nozzle
variable_extruder_contact_length: 20       #This setting !only! apply to the Papilio Extruder. Normally gears have a tiny contact length with the Filament, while the Papilio has a long contact length with the filament!
variable_feed_speed: 50                    #Velocity(mm/sec) - Speed the mmu feeds the filament to the hotend.
variable_unfeed_speed: 50                  #Velocity(mm/sec) - Speed the mmu un-feeds the filament from the hotend.
variable_extruder_feed_speed: 360          #Feedrate(mm/min) - Speed the extruder feeds the filament in the extruder.
variable_extruder_unfeed_speed: 360        #Feedrate(mm/min) - Speed the extruder feeds the filament out of the extruder.
variable_acceleration: 1000                #Acceleration(mmÂ²/sec) - Acceleration of the MMU.
variable_anti_ooze: 15                     #Distance the Filament gets retract for a filament change so it does not ooze. Don't set this too low or will extrude plastics on loadings

#######################################
### Things you don't have to change ###
variable_to_be_safe: 10                    #Extra distance the Extruder will unfeed the filament than needed. This will ensure the filament really left the extruder. If everything is setup up perfectly you can se this to 0 to save a tiny amount of loading times.
variable_filament_park_distance: 60        #Distance the filament gets pulled back once it reached the sensor so the channel is free for the second filament.
variable_smart_y_to_sensor: 25             #Internal Smart-Y-Splitter distance. Change this only if you do not use the provided Smart-Y-Splitter
variable_sensor_blind_travel: 5            #Distance we can't track while the filament rolls over the trigger of the switch.
variable_smart_sensor_to_yend: 9           #Internal Smart-Y-Splitter distance. Change this only if you do not use the provided Smart-Y-Splitter
variable_servo_idle_time: 1000             #Time to let the servo reach it's position, in milliseconds (1 second = 1000 milliseconds)
variable_timeout_pause: 72000              #Time out waiting time till the print fails during _MMMU_PAUSE
variable_disable_heater: 600               #Time the hotend stays hot during the _MMMU_PAUSE

### Things you're not allowed to change!!! ###
variable_loaded_filament: 0 #0:no filament 1:Filament A 2:Filament B
variable_direction: 0 #Converts the movement in a positive or negative Movement 

### Temp
variable_purge_tower: 0                    #1=True, 0=False. You can setup purging towers with tip forming in slicer - if you use some kind of purge bucket, set this to false. 
gcode:

[save_variables]
filename: /home/pi/printer_data/config/BATMMU/bat_vars.cfg

[respond]
default_type: command